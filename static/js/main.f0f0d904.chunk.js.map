{"version":3,"sources":["spot_light.js","loading_screen.js","miscelaneous.js","Zeppelin.js","clapper.js","main.js","index.js"],"names":["Make_spotlight","color","position","direction","angle","intensity","distance","penumbra","decay","look_at","light","useMemo","THREE","castShadow","shadow","mapSize","width","height","shadowMap","target","Loading_screen","props","useSpring","loop","to","opacity","top","from","config","wobbly","h1","style","left","add_2_lists","lista","listb","hextorgb","hex","result","exec","r","parseInt","g","b","componentToHex","c","toString","length","rgbtohex","Zeppelin","gltf","useLoader","GLTFLoader","styles","nodes","mesh_0","geometry","rotation","mass","tension","friction","useState","hovered","sethovered","starter","setsstarter","colorfrom","setcolorfrom","counter","setcounter","zep_col_dark","zep_col_light","colorto","setto","useEffect","intervalId","perc","setInterval","lerp","document","body","cursor","clearInterval","material","flatShading","transmission","mesh","receiveShadow","scale","onPointerOver","e","stopPropagation","onPointerOut","Clapper","group","useRef","useGLTF","materials","ref","dispose","Math","PI","Cube_0","Cube002_0","Cube002_1","Cube003_0","Cube004_0","Sphere04_0","Sphere04001_0","Sphere04002_0","Sphere04003_0","Sphere04004_0","Sphere04005_0","Cube001_0","preload","Island","shadows","Landscape001","Ocean","gl","useThree","state","waterNormals","wrapS","wrapT","geom","textureWidth","textureHeight","sunDirection","sunColor","waterColor","distortionScale","fog","undefined","format","encoding","useFrame","delta","current","uniforms","time","value","args","Dolly","cam_pos","strength","unit_vec","x_offset","normalize","x","z_offset","z","camera","y","My_text","text","Main","title","cam","fov","near","far","zoom","camstate","setCamState","LoaderState","setLoader","console","log","camera_positions","pickable_components","visible","backgroundColor","marginBottom","colorManagement","mode","fallback","onClick","Sky","turbidity","rayleigh","mieCoefficient","mieDirectionalG","elevation","azimuth","OrbitControls","enablePan","fill","paused","options","amplitude","speed","points","extend","Water","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f0f0d904.chunk.js","sourcesContent":["import React, { Suspense, useEffect, useRef, useState, useMemo } from 'react'\r\nimport * as THREE from 'three'\r\nimport {SpotLightHelper} from \"three\"\r\n\r\n\r\n\r\n\r\ninterface Test_spotlight_props {\r\n    color?: int;\r\n    position?: list;\r\n    direction?: list;\r\n    angle?: float;\r\n    intensity?: float;\r\n    distance?: float;\r\n    decay?: float;\r\n\r\n}\r\nexport default function Make_spotlight({color=0xFFFFFF,position=[0,0,0],direction=[0,0,0],angle=1,intensity=1,distance=0,penumbra=0,decay=0}:Test_spotlight_props ){\r\n  const look_at = [position[0]+direction[0],position[1]+direction[1],position[2]+direction[2]]\r\n  const light = useMemo(() => new THREE.SpotLight(color), [])\r\n  light.angle = angle\r\n  light.distance = distance\r\n  light.penumbra = penumbra\r\n  light.decay = decay\r\n  light.castShadow = true;\r\n  light.shadow.mapSize.width = 1024;\r\n  light.shadow.mapSize.height = 1024;\r\n  return(\r\n    <group castShadow     shadowMap\r\n        castShadow\r\n        receiveShadow>\r\n    <primitive castShadow     shadowMap\r\n        castShadow\r\n        receiveShadow object={light} position={position} />\r\n    <primitive castShadow     shadowMap\r\n        castShadow\r\n        receiveShadow object={light.target} position={look_at}  />\r\n    </group>\r\n  )\r\n}\r\n","import { useSpring, animated, config } from 'react-spring'\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Loading_screen(){\r\n  const props = useSpring({\r\n\r\n    loop: true,\r\n    to: { opacity: 1, top:'50vh',   },\r\n    from: { opacity: 0, top:'0vh',  },\r\n    config: config.wobbly,\r\n  })\r\n\r\nreturn(\r\n  <div >\r\n    <animated.h1 style={{position:'absolute', left:'50vw',  color:'white', ...props}}>\r\n      LOADING...\r\n    </animated.h1>\r\n  </div >\r\n)\r\n}\r\n","export function add_2_lists(lista,listb){\r\n  return [lista[0]+listb[0],lista[1]+listb[1],lista[2]+listb[2]]\r\n}\r\nexport function hextorgb(hex) {\r\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return result ? {\r\n    r: parseInt(result[1], 16),\r\n    g: parseInt(result[2], 16),\r\n    b: parseInt(result[3], 16)\r\n  } : null;\r\n}\r\nexport function componentToHex(c) {\r\n  var hex = c.toString(16);\r\n  return hex.length == 1 ? \"0\" + hex : hex;\r\n}\r\nexport function rgbtohex(r, g, b) {\r\n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\n","import { Canvas,extend, useLoader, useFrame, useThree,} from '@react-three/fiber'\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\nimport { useSpring, useTransition, animated,config } from '@react-spring/three'\r\nimport React, { Suspense, useEffect, useRef, useState, useMemo } from 'react'\r\nimport * as THREE from 'three'\r\nimport {add_2_lists, hextorgb, rgbtohex} from './miscelaneous'\r\n\r\n\r\n\r\nexport default function Zeppelin(props) {\r\n  var gltf = useLoader(GLTFLoader, './zeppelin/scene.gltf')\r\n  var textur = useLoader(GLTFLoader, './zeppelin/texture/scene.gltf')\r\n  const zep = gltf.nodes.mesh_0.geometry\r\n  const rota = 3.14*2;\r\n  const styles = useSpring({\r\n    loop: false,\r\n    from: { rotation: [0, 3.14, 0 ],\r\n             position: add_2_lists(props.position,[0,0,0]),\r\n           },\r\n    to: { rotation: [0, 3.14/2, 0],\r\n          position: add_2_lists(props.position,[0,-5,0])\r\n          },\r\n    config:{ mass: 200, tension: 100, friction: 0 }\r\n  });\r\n\r\n  // console.log(gltf)\r\n\r\n  const [hovered, sethovered] = useState(false)\r\n  const [starter, setsstarter] = useState(false)\r\n  const [colorfrom, setcolorfrom] = useState('#000000')\r\n  const [counter, setcounter] = useState()\r\n  const zep_col_dark = '#012a4a'\r\n  const zep_col_light = '#014f86'\r\n  const [colorto, setto] = useState('#000000')\r\n  useEffect(() => {\r\n\r\n    let intervalId;\r\n    let perc = 100;\r\n\r\n    if((hovered)&&(starter)){\r\n      setcounter(perc)\r\n      setto(zep_col_dark)\r\n      setcolorfrom(zep_col_light)\r\n    }\r\n    if (hovered && (starter==false)){\r\n      setsstarter(true)\r\n      setcounter(0)\r\n      setto(zep_col_dark)\r\n      setcolorfrom(zep_col_light)\r\n    }\r\n    if(starter){\r\n      intervalId = setInterval(() => {\r\n        setcounter(counter + 1);\r\n      }, 1)\r\n    }\r\n    if (counter < perc){\r\n      var r = THREE.MathUtils.lerp(parseInt(hextorgb(colorfrom).r),parseInt(hextorgb(colorto).r),counter/perc)\r\n      var g = THREE.MathUtils.lerp(parseInt(hextorgb(colorfrom).g),parseInt(hextorgb(colorto).g),counter/perc)\r\n      var b = THREE.MathUtils.lerp(parseInt(hextorgb(colorfrom).b),parseInt(hextorgb(colorto).b),counter/perc)\r\n      var c = rgbtohex(parseInt(r),parseInt(g),parseInt(b))\r\n      setcolorfrom(c)\r\n    }else{\r\n      setsstarter(false)\r\n    }\r\n   document.body.style.cursor = hovered ? \"pointer\" : \"auto\"\r\n   return () => clearInterval(intervalId);\r\n }, [hovered,counter])\r\nconst material = new THREE.MeshPhongMaterial({\r\n  color: colorfrom,    // red (can also use a CSS color string here)\r\n  flatShading: true,\r\n  transmission:1\r\n});\r\n  return(\r\n    <>\r\n    <animated.mesh shadowMap\r\n    castShadow\r\n    receiveShadow { ...styles}>\r\n          <mesh castShadow receiveShadow shadowMap\r\n          geometry={gltf.nodes.mesh_0.geometry}\r\n           scale={2}\r\n           onPointerOver={(e) => (e.stopPropagation(), sethovered(true))}\r\n          onPointerOut={(e) => (e.stopPropagation(), sethovered(false))}\r\n          material={material}\r\n           >\r\n            </mesh>\r\n      </animated.mesh>\r\n    </>\r\n  );\r\n}\r\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\nauthor: Quince Creative (https://sketchfab.com/quincemedia)\nlicense: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)\nsource: https://sketchfab.com/3d-models/film-clapperboard-free-3d-model-c5c798aa23024b868f7653229911b915\ntitle: Film Clapperboard Free 3D Model\n*/\n\nimport React, { useRef, useState, useEffect } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport * as THREE from 'three'\nimport { useSpring, useTransition, animated,config } from '@react-spring/three'\n\nimport {add_2_lists, hextorgb, rgbtohex} from './miscelaneous'\n\n\n\n\nexport default function Clapper({ ...props }) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('./clapper/scene.gltf')\n\n\n\n  const [hovered, sethovered] = useState(false)\n  const [starter, setsstarter] = useState(false)\n  const [colorfrom, setcolorfrom] = useState('#000000')\n  const [counter, setcounter] = useState()\n  const zep_col_dark = '#012a4a'\n  const zep_col_light = '#014f86'\n  const [colorto, setto] = useState('#000000')\n  useEffect(() => {\n\n    let intervalId;\n    let perc = 100;\n\n    if((hovered)&&(starter)){\n      setcounter(perc)\n      setto(zep_col_dark)\n      setcolorfrom(zep_col_light)\n    }\n    if (hovered && (starter==false)){\n      setsstarter(true)\n      setcounter(0)\n      setto(zep_col_dark)\n      setcolorfrom(zep_col_light)\n    }\n    if(starter){\n      intervalId = setInterval(() => {\n        setcounter(counter + 1);\n      }, 1)\n    }\n    if (counter < perc){\n      var r = THREE.MathUtils.lerp(parseInt(hextorgb(colorfrom).r),parseInt(hextorgb(colorto).r),counter/perc)\n      var g = THREE.MathUtils.lerp(parseInt(hextorgb(colorfrom).g),parseInt(hextorgb(colorto).g),counter/perc)\n      var b = THREE.MathUtils.lerp(parseInt(hextorgb(colorfrom).b),parseInt(hextorgb(colorto).b),counter/perc)\n      var c = rgbtohex(parseInt(r),parseInt(g),parseInt(b))\n      setcolorfrom(c)\n    }else{\n      setsstarter(false)\n    }\n   document.body.style.cursor = hovered ? \"pointer\" : \"auto\"\n   return () => clearInterval(intervalId);\n }, [hovered,counter])\n  const material = new THREE.MeshPhongMaterial({\n    color: colorfrom,    // red (can also use a CSS color string here)\n    flatShading: true,\n    transmission:1\n  });\n\n\n\n\n  const styles = useSpring({\n    loop: false,\n    from: { rotation: [.1, -3.14/2, .1 ],\n             position: add_2_lists(props.position,[0,1,0]),\n           },\n    to: { rotation: [0, 3.14/2, 0],\n          position: add_2_lists(props.position,[0,-1,0])\n          },\n    config:{ mass: 100, tension: 100, friction: 0 }\n  });\n\n\n\n\n\n  return (\n    <animated.mesh { ...styles}>\n    <group ref={group} {...props} dispose={null}\n    onPointerOver={(e) => (e.stopPropagation(), sethovered(true))}\n    onPointerOut={(e) => (e.stopPropagation(), sethovered(false))}\n    >\n      <group rotation={[-Math.PI / 2, 0, 0]} position={[-160,-20,250]}>\n        <group position={[0, 0, 14.25]}>\n          <mesh geometry={nodes.Cube_0.geometry} material={material} />\n        </group>\n        <group position={[0, 0, 13.71]}>\n          <mesh geometry={nodes.Cube002_0.geometry} material={material} />\n          <mesh geometry={nodes.Cube002_1.geometry} material={material} />\n        </group>\n        <group position={[0, -9.01, 15.44]}>\n          <mesh geometry={nodes.Cube003_0.geometry} material={material} />\n        </group>\n        <group position={[-1.68, -9.01, 15.44]}>\n          <mesh geometry={nodes.Cube004_0.geometry} material={material} />\n        </group>\n        <group position={[0.99, -9.49, 16.26]} rotation={[1.79, 0, -Math.PI / 2]} scale={[0.21, 0.21, 0.21]}>\n          <mesh geometry={nodes.Sphere04_0.geometry} material={material} />\n        </group>\n        <group position={[0.99, -9.49, 14.02]} rotation={[0.83, 0, -Math.PI / 2]} scale={[0.21, 0.21, 0.21]}>\n          <mesh geometry={nodes.Sphere04001_0.geometry} material={material} />\n        </group>\n        <group position={[0.99, -6.42, 14.02]} rotation={[2.37, 0, -Math.PI / 2]} scale={[0.21, 0.21, 0.21]}>\n          <mesh geometry={nodes.Sphere04002_0.geometry} material={material} />\n        </group>\n        <group position={[-0.99, -6.42, 14.02]} rotation={[2.37, 0, Math.PI / 2]} scale={[-0.21, 0.21, 0.21]}>\n          <mesh geometry={nodes.Sphere04003_0.geometry} material={material} />\n        </group>\n        <group position={[-0.99, -9.49, 14.02]} rotation={[0.83, 0, Math.PI / 2]} scale={[-0.21, 0.21, 0.21]}>\n          <mesh geometry={nodes.Sphere04004_0.geometry} material={material} />\n        </group>\n        <group position={[-0.99, -9.49, 16.26]} rotation={[1.79, 0, Math.PI / 2]} scale={[-0.21, 0.21, 0.21]}>\n          <mesh geometry={nodes.Sphere04005_0.geometry} material={material} />\n        </group>\n        <group position={[0.96, -9.5, 16.28]} rotation={[0.26, 0, 0]}>\n          <mesh geometry={nodes.Cube001_0.geometry} material={material} />\n        </group>\n        <group position={[38.23, -8.13, 7.88]} rotation={[1.77, 1.27, -1.7]} />\n      </group>\n    </group>\n    </animated.mesh>\n  )\n}\nuseGLTF.preload('./clapper/scene.gltf')\n","import { Canvas,extend, useLoader, useFrame, useThree,} from '@react-three/fiber'\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\nimport { useSpring, useTransition, animated,config } from '@react-spring/three'\r\nimport React, { Suspense, useEffect, useRef, useState, useMemo } from 'react'\r\n\r\nimport * as THREE from 'three'\r\nimport { OrbitControls, Sky, Cloud, useHelper, Preload  } from '@react-three/drei'\r\nimport { Geometry,Water } from \"three-stdlib\";\r\nimport Wave from 'react-wavify'\r\n\r\nimport Make_spotlight from './spot_light'\r\nimport Loading_screen from './loading_screen'\r\nimport Zeppelin from './Zeppelin'\r\nimport Clapper from './clapper'\r\nimport {add_2_lists, hextorgb, rgbtohex} from './miscelaneous'\r\n\r\nconst Island = () => {\r\n  var gltf = useLoader(GLTFLoader, './island/Redoneisland.glb')\r\n  const material = new THREE.MeshPhongMaterial({\r\n    color: '#C2B280',\r\n    flatShading: true,\r\n  });\r\n\r\n  return(\r\n    <mesh\r\n    shadows\r\n    castShadow\r\n    receiveShadow\r\n    geometry={gltf.nodes.Landscape001.geometry}\r\n    scale={200}\r\n    material={material}\r\n    position={[0,-11,-250]}\r\n     >\r\n      </mesh>\r\n  )\r\n}\r\n\r\n\r\nextend({ Water })\r\nfunction Ocean() {\r\n  const ref = useRef()\r\n  const gl = useThree((state) => state.gl)\r\n  const waterNormals = useLoader(THREE.TextureLoader, '/0110.png')\r\n  waterNormals.wrapS = waterNormals.wrapT = THREE.RepeatWrapping\r\n  const geom = useMemo(() => new THREE.PlaneGeometry(20000, 20000), [])\r\n  const config = useMemo(\r\n    () => ({\r\n      textureWidth: 512,\r\n      textureHeight: 512,\r\n      waterNormals,\r\n      sunDirection: new THREE.Vector3(-1),\r\n      sunColor: 'hotpink',\r\n      waterColor: '#012a4a',\r\n      distortionScale: 3,\r\n\r\n      fog: gl.fog !== undefined,\r\n      format: gl.encoding\r\n    }),\r\n    [waterNormals]\r\n  )\r\n  useFrame((state, delta) => (ref.current.material.uniforms.time.value += delta))\r\n\r\n\r\n  const styles = useSpring({\r\n    loop: false,\r\n    from: {\r\n             position: [0,0.5,0],\r\n           },\r\n    to: {\r\n          position: [0,-.5,0]\r\n          },\r\n    config:{ mass: 10, tension: 10, friction: 0 }\r\n  });\r\n\r\n\r\n  return (\r\n\r\n    <animated.mesh {...styles}>\r\n      <water ref={ref} args={[geom, config]} rotation-x={-Math.PI / 2} />\r\n    </animated.mesh>\r\n\r\n  )\r\n}\r\nfunction Dolly({cam_pos=[0,0,0]}) {\r\n  const strength =.008\r\n  let unit_vec = new THREE.Vector3(0 - cam_pos[0],0,-250 - cam_pos[2])\r\n  unit_vec = unit_vec.normalize()\r\n  const x_offset = unit_vec.x*100\r\n  const z_offset = unit_vec.z*100\r\n\r\n  useFrame(({camera}) => {\r\n    camera.position.x += ((cam_pos[0]-x_offset)-camera.position.x)*strength\r\n    camera.position.y += (cam_pos[1]-camera.position.y)*strength\r\n    camera.position.z += ((cam_pos[2]-z_offset)-camera.position.z)*strength\r\n  })\r\n  return null\r\n}\r\n\r\nfunction My_text({text}){\r\n\r\n  return(\r\n    <div>\r\n    <h2 style={{position:'relative', top: '50px', left:'40%', color:'#C2B280'}}>\r\n      {text}\r\n    </h2>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default function Main(){\r\n  document.title = 'Welcome to adeadzeplin'\r\n  const cam = {\r\n    position: [300,3000,-600], fov: 60, near: 1, far: 5000, zoom: 1\r\n  }\r\n  const [camstate, setCamState] = useState(8)\r\n  const [LoaderState, setLoader] = useState(true)\r\n\r\n  console.log(LoaderState)\r\n  const camera_positions = [\r\n    [0,20,-90],\r\n    [-130,20,-130],\r\n    [-160,20,-250],\r\n    [-130,20,-370],\r\n    [0,20,-400],\r\n    [130,20,-370],\r\n    [160,20,-250],\r\n    [110,20,-130],\r\n    [0,20,-90]\r\n  ]\r\n  const pickable_components = [\r\n    <My_text text='Welcome to my site its nearly done!'/>,\r\n    <My_text text='asdgfsdfghdfghjdy 2'/>,\r\n    <My_text text='what is up?????? 3'/>,\r\n    <My_text text='yo what are you looking at? 4'/>,\r\n    <My_text text='Can you stop clicking these zeplins? 5'/>,\r\n    <My_text text='more important info is located here 6'/>,\r\n    <>\r\n    <My_text text='Credits: this is where I will credit'/>\r\n    <My_text text='the assests that i use'/>\r\n    </>,\r\n    <My_text text='spagetti'/>,\r\n    ,\r\n  ]\r\n  const targ = [0,-5,-250]\r\n\r\n  useEffect(() => { setLoader(false) }, [])//when the site is loaded disable the loading screen\r\n  return(\r\n    <>\r\n      <div style={{visible:LoaderState, position: \"absolute\", width: '100vw', height: '100vh', backgroundColor:'#012a4a'}}>\r\n        <Loading_screen/>\r\n      </div>\r\n      <div style={{visible:!LoaderState, position: \"relative\", width: '100%', height: '70%', marginBottom: '-5vh'}}>\r\n      <Canvas colorManagement shadows camera={cam} mode=\"concurrent\">\r\n        <Suspense fallback={null}>\r\n\r\n          {Make_spotlight({\r\n            color:0xf0FF8f,\r\n            position:add_2_lists(camera_positions[camstate],[0,100,0]),\r\n            direction:[0,-1,0],\r\n            angle:.4,\r\n            decay:.1,\r\n            penumbra:.9,\r\n            intensity:.1,\r\n            distance:200\r\n          })}\r\n          {Make_spotlight({\r\n            color:0xf0FF8f,\r\n            position:add_2_lists(cam,[0,100,0]),\r\n            direction:[0,-1,0],\r\n            angle:20,\r\n            decay:.1,\r\n            penumbra:.9,\r\n            intensity:.1,\r\n            distance:200\r\n          })}\r\n\r\n          <ambientLight intensity={.2} />\r\n          <mesh>\r\n            <mesh onClick={e => setCamState(0)}>\r\n              <Zeppelin castShadow receiveShadow position={camera_positions[0]}/>\r\n            </mesh>\r\n            <mesh onClick={e => setCamState(1)}>\r\n              <Zeppelin castShadow receiveShadow position={camera_positions[1]}/>\r\n            </mesh>\r\n            <mesh onClick={e => setCamState(2)}>\r\n              <Zeppelin castShadow receiveShadow position={camera_positions[2]}/>\r\n            </mesh>\r\n            <mesh onClick={e => setCamState(3)}>\r\n              <Zeppelin castShadow receiveShadow position={camera_positions[3]}/>\r\n            </mesh>\r\n            <mesh onClick={e => setCamState(4)}>\r\n              <Zeppelin castShadow receiveShadow position={camera_positions[4]}/>\r\n            </mesh>\r\n            <mesh onClick={e => setCamState(5)}>\r\n              <Zeppelin castShadow receiveShadow position={camera_positions[5]}/>\r\n            </mesh>\r\n            <mesh onClick={e => setCamState(6)}>\r\n              <Clapper castShadow receiveShadow position={camera_positions[6]}/>\r\n            </mesh>\r\n            <mesh onClick={e => setCamState(7)}>\r\n              <Zeppelin castShadow receiveShadow position={camera_positions[7]}/>\r\n            </mesh>\r\n          </mesh>\r\n          <Dolly cam_pos={add_2_lists(camera_positions[camstate],[0,20,0])}/>\r\n          <Ocean position={[0,-100,0]}/>\r\n          <Sky\r\n          intensity={10000}\r\n          scale={10000}\r\n          turbidity={0}\r\n          rayleigh={1}\r\n          mieCoefficient={0.1}\r\n          mieDirectionalG={0.1}\r\n          elevation={100}\r\n          azimuth={10}\r\n          />\r\n          <Island position={[0,0,0]}/>\r\n        </Suspense>\r\n        <OrbitControls target={targ} enablePan={false} />\r\n      </Canvas>\r\n      </div>\r\n\r\n      <div style={{position:'absolute', width: '100vw'}}>\r\n      <Wave fill='#012a4a' paused={false} options={{\r\n          height: 20,\r\n          amplitude: 20,\r\n          speed: 0.2,\r\n          points: 4\r\n        }}/>\r\n      </div>\r\n      <div style={{position:'absolute',width: '100vw'}}>\r\n      <Wave fill='#012a4a' paused={false} options={{\r\n          height: 10,\r\n          amplitude: 30,\r\n          speed: 0.2,\r\n          points: 10\r\n        }}/>\r\n      </div>\r\n      <div>\r\n        <div style={{height: '45vh', backgroundColor:'#012a4a'}}>\r\n            {pickable_components[camstate]}\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n  )\r\n\r\n\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Main from './main.js';\r\n\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Main />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}