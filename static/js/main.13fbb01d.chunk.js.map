{"version":3,"sources":["PortalMaterial.js","text.js","spot_light.js","Boat.js","main.js","index.js"],"names":["PortalMaterial","uniforms","uTime","value","uColorStart","THREE","uColorEnd","vertexShader","fragmentShader","this","v","extend","Text","children","vAlign","hAlign","size","props","color","font","useLoader","FontLoader","config","useMemo","height","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","mesh","useRef","useLayoutEffect","current","geometry","computeBoundingBox","boundingBox","getSize","position","x","y","scale","ref","args","Make_spotlight","direction","angle","intensity","distance","penumbra","decay","look_at","light","object","target","TextGeometry","Boat","group","useGLTF","nodes","materials","dispose","rotation","Math","PI","defaultMaterial","material","defaultMaterial_1","defaultMaterial_2","Glass","defaultMaterial_3","defaultMaterial_4","defaultMaterial_5","defaultMaterial_6","defaultMaterial_7","defaultMaterial_8","defaultMaterial_9","defaultMaterial_10","defaultMaterial_11","defaultMaterial_12","defaultMaterial_13","defaultMaterial_14","defaultMaterial_15","defaultMaterial_16","defaultMaterial_17","defaultMaterial_18","defaultMaterial_19","defaultMaterial_20","add_2_lists","lista","listb","hextorgb","hex","result","exec","r","parseInt","g","b","componentToHex","c","toString","length","rgbtohex","Ocean","gl","useThree","state","waterNormals","wrapS","wrapT","geom","textureWidth","textureHeight","sunDirection","sunColor","waterColor","distortionScale","fog","undefined","format","encoding","useFrame","delta","time","preload","Water","Ball","gltf","GLTFLoader","styles","useSpring","loop","reverse","from","to","mass","tension","friction","scene","Umbrella","Island","flatShading","Landscape004","Dock","Text0","local_pos","Text1","Billboard","bill","clone","Boat_anim","boat_starting","boatstyles","useState","boat_text","setboattext","textstyles","hovered","sethovered","starter","setsstarter","colorfrom","setcolorfrom","counter","setcounter","boat_col_dark","boat_col_light","colorto","setto","useEffect","intervalId","perc","setInterval","lerp","console","log","document","body","style","cursor","clearInterval","visible","onClick","e","stopPropagation","onPointerOver","onPointerOut","Zeppelin","mesh_0","zep_col_dark","zep_col_light","Site","title","Expire","setVisible","setTimeout","delay","cam","fov","near","far","targ","sign0","window","innerWidth","innerHeight","sign1","shadowMap","camera","fallback","Sky","turbidity","rayleigh","mieCoefficient","mieDirectionalG","elevation","azimuth","OrbitControls","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.13fbb01d.chunk.js","sourcesContent":["import * as THREE from 'three'\r\nimport { extend } from '@react-three/fiber'\r\nimport glsl from 'babel-plugin-glsl/macro'\r\n\r\nexport default class PortalMaterial extends THREE.ShaderMaterial {\r\n  constructor() {\r\n    super({\r\n      uniforms: {\r\n        uTime: { value: 0 },\r\n        uColorStart: { value: new THREE.Color('#2B60DE') },\r\n        uColorEnd: { value: new THREE.Color('white') },\r\n      },\r\n      vertexShader: `\r\n      varying vec2 vUv;\r\n      void main() {\r\n        vec4 modelPosition = modelMatrix * vec4(position, 1.0);\r\n        vec4 viewPosition = viewMatrix * modelPosition;\r\n        vec4 projectionPosition = projectionMatrix * viewPosition;\r\n        gl_Position = projectionPosition;\r\n        vUv = uv;\r\n      }\r\n      `,\r\n      fragmentShader: glsl`\r\n      #pragma glslify: cnoise3 = require(glsl-noise/simplex/3d.glsl)\r\n      uniform float uTime;\r\n      uniform vec3 uColorStart;\r\n      uniform vec3 uColorEnd;\r\n      varying vec2 vUv;\r\n      void main() {\r\n        vec2 displacedUv = vUv + cnoise3(vec3(vUv * 1.0, uTime * 0.1));\r\n        float strength = cnoise3(vec3(displacedUv * 1.0, uTime *0.1));\r\n        float outerGlow = distance(vUv, vec2(0.5)) * 3.0 - 1.4;\r\n        strength += outerGlow;\r\n        strength += step(-0.2, strength) * 0.5;\r\n        strength = clamp(strength, 0.0, 0.9);\r\n        vec3 color = mix(uColorStart, uColorEnd, strength);\r\n        gl_FragColor = vec4(color, 1.0);\r\n      }\r\n      `,\r\n    })\r\n  }\r\n\r\n  get time() {\r\n    return this.uniforms.uTime.value\r\n  }\r\n\r\n  set time(v) {\r\n    this.uniforms.uTime.value = v\r\n  }\r\n\r\n  get colorStart() {\r\n    return this.uniforms.uColorStart.value\r\n  }\r\n\r\n  get colorEnd() {\r\n    return this.uniforms.uColorEnd.value\r\n  }\r\n}\r\n\r\nextend({ PortalMaterial })\r\n","import * as THREE from 'three'\r\nimport React, { useMemo, useRef, useLayoutEffect } from 'react'\r\nimport { extend, useLoader } from '@react-three/fiber'\r\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader'\r\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry'\r\n\r\nextend({ TextGeometry })\r\n\r\nexport default function Text({ children, vAlign = 'center', hAlign = 'center', size = 1.5, color = '#000000', ...props }) {\r\n  const font = useLoader(FontLoader, '/gentilis_regular.typeface.json')\r\n  const config = useMemo(\r\n    () => ({ font, size: 40, height: 30, curveSegments: 32, bevelEnabled: true, bevelThickness: 6, bevelSize: 2.5, bevelOffset: 0, bevelSegments: 8 }),\r\n    [font]\r\n  )\r\n  const mesh = useRef()\r\n  useLayoutEffect(() => {\r\n    const size = new THREE.Vector3()\r\n    mesh.current.geometry.computeBoundingBox()\r\n    mesh.current.geometry.boundingBox.getSize(size)\r\n    mesh.current.position.x = hAlign === 'center' ? -size.x / 2 : hAlign === 'right' ? 0 : -size.x\r\n    mesh.current.position.y = vAlign === 'center' ? -size.y / 2 : vAlign === 'top' ? 0 : -size.y\r\n  }, [children])\r\n  return (\r\n    <group {...props} scale={[0.1 * size, 0.1 * size, 0.01]}>\r\n      <mesh ref={mesh}>\r\n        <textGeometry args={[children, config]} />\r\n        <meshNormalMaterial />\r\n      </mesh>\r\n    </group>\r\n  )\r\n}\r\n","import React, { Suspense, useEffect, useRef, useState, useMemo } from 'react'\r\nimport * as THREE from 'three'\r\nimport {SpotLightHelper} from \"three\"\r\n\r\n\r\n\r\n\r\ninterface Test_spotlight_props {\r\n    color?: int;\r\n    position?: list;\r\n    direction?: list;\r\n    angle?: float;\r\n    intensity?: float;\r\n    distance?: float;\r\n    decay?: float;\r\n\r\n}\r\nexport default function Make_spotlight({color=0xFFFFFF,position=[0,0,0],direction=[0,0,0],angle=1,intensity=1,distance=0,penumbra=0,decay=0}:Test_spotlight_props ){\r\n  const look_at = [position[0]+direction[0],position[1]+direction[1],position[2]+direction[2]]\r\n  const light = useMemo(() => new THREE.SpotLight(color), [])\r\n  light.angle = angle\r\n  light.distance = distance\r\n  light.penumbra = penumbra\r\n  light.decay = decay\r\n  return(\r\n    <group>\r\n    <primitive object={light} position={position} />\r\n    <primitive object={light.target} position={look_at}  />\r\n    </group>\r\n  )\r\n}\r\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\nauthor: Ashley Aslett (https://sketchfab.com/AshleyAslett)\nlicense: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)\nsource: https://sketchfab.com/models/3e9093b6f0ce474da4d8cfea7e01f420\ntitle: Victorian Row Boat\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\n\nexport default function Boat({ ...props }) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('./boat/scene.gltf')\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group rotation={[-Math.PI / 2, 0, 0]}>\n        <group rotation={[Math.PI / 2, 0, 0]}>\n          <mesh geometry={nodes.defaultMaterial.geometry} material={props.material} />\n          <mesh geometry={nodes.defaultMaterial_1.geometry} material={props.material} />\n          <mesh geometry={nodes.defaultMaterial_2.geometry} material={materials.Glass} />\n          <mesh geometry={nodes.defaultMaterial_3.geometry} material={props.material} />\n          <mesh geometry={nodes.defaultMaterial_4.geometry} material={props.material} />\n          <mesh geometry={nodes.defaultMaterial_5.geometry} material={props.material} />\n          <mesh geometry={nodes.defaultMaterial_6.geometry} material={props.material} />\n          <mesh geometry={nodes.defaultMaterial_7.geometry} material={props.material} />\n          <mesh geometry={nodes.defaultMaterial_8.geometry} material={props.material} />\n          <mesh geometry={nodes.defaultMaterial_9.geometry} material={props.material} />\n          <mesh geometry={nodes.defaultMaterial_10.geometry} material={props.material} />\n          <mesh geometry={nodes.defaultMaterial_11.geometry} material={props.material} />\n          <mesh geometry={nodes.defaultMaterial_12.geometry} material={props.material} />\n          <mesh geometry={nodes.defaultMaterial_13.geometry} material={props.material} />\n          <mesh geometry={nodes.defaultMaterial_14.geometry} material={props.material} />\n          <mesh geometry={nodes.defaultMaterial_15.geometry} material={props.material} />\n          <mesh geometry={nodes.defaultMaterial_16.geometry} material={props.material} />\n          <mesh geometry={nodes.defaultMaterial_17.geometry} material={props.material} />\n          <mesh geometry={nodes.defaultMaterial_18.geometry} material={props.material} />\n          <mesh geometry={nodes.defaultMaterial_19.geometry} material={props.material} />\n          <mesh geometry={nodes.defaultMaterial_20.geometry} material={props.material} />\n        </group>\n      </group>\n    </group>\n  )\n}\n\nuseGLTF.preload('/scene.gltf')\n","import React, { Suspense, useEffect, useRef, useState, useMemo } from 'react'\r\nimport './PortalMaterial'\r\nimport * as THREE from 'three'\r\nimport {SpotLightHelper} from \"three\"\r\nimport { TextureLoader } from 'three/src/loaders/TextureLoader'\r\nimport { Canvas,extend, useLoader, useFrame, useThree,} from '@react-three/fiber'\r\nimport { Physics, Debug, usePlane, useCompoundBody } from '@react-three/cannon'\r\nimport { Geometry,Water } from \"three-stdlib\";\r\nimport { OrbitControls, Sky,useHelper } from '@react-three/drei'\r\n\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\nimport { useSpring, useTransition, animated,config } from '@react-spring/three'\r\nimport Text from './text'\r\nimport Make_spotlight from './spot_light'\r\nimport Boat from './Boat'\r\n\r\nextend({ Water })\r\n\r\n\r\n\r\nfunction add_2_lists(lista,listb){\r\n  return [lista[0]+listb[0],lista[1]+listb[1],lista[2]+listb[2]]\r\n}\r\nfunction hextorgb(hex) {\r\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return result ? {\r\n    r: parseInt(result[1], 16),\r\n    g: parseInt(result[2], 16),\r\n    b: parseInt(result[3], 16)\r\n  } : null;\r\n}\r\nfunction componentToHex(c) {\r\n  var hex = c.toString(16);\r\n  return hex.length == 1 ? \"0\" + hex : hex;\r\n}\r\nfunction rgbtohex(r, g, b) {\r\n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\n\r\n\r\n\r\nfunction Ocean() {\r\n  const ref = useRef()\r\n  const gl = useThree((state) => state.gl)\r\n  const waterNormals = useLoader(THREE.TextureLoader, '/0110.png')\r\n  waterNormals.wrapS = waterNormals.wrapT = THREE.RepeatWrapping\r\n  const geom = useMemo(() => new THREE.PlaneGeometry(20000, 20000), [])\r\n  const config = useMemo(\r\n    () => ({\r\n      textureWidth: 512,\r\n      textureHeight: 512,\r\n      waterNormals,\r\n      sunDirection: new THREE.Vector3(-1),\r\n      sunColor: 'hotpink',\r\n      waterColor: '#012a4a',\r\n      distortionScale: 3,\r\n\r\n      fog: gl.fog !== undefined,\r\n      format: gl.encoding\r\n    }),\r\n    [waterNormals]\r\n  )\r\n  useFrame((state, delta) => (ref.current.material.uniforms.time.value += delta))\r\n  return <water ref={ref} args={[geom, config]} rotation-x={-Math.PI / 2} />\r\n}\r\n\r\n\r\nconst Ball = () => {\r\n  const gltf = useLoader(GLTFLoader, './ball/scene.gltf')\r\n\r\n\r\n  const styles = useSpring({\r\n    loop: {reverse:true},\r\n    from: { rotation: [.01, 0, 0],\r\n             position: [0,0,200],\r\n           },\r\n    to: {\r\n          rotation: [0, 0, 0],\r\n          position: [0,.1,200]\r\n          },\r\n    config:{ mass: 2, tension: 120, friction: 0 }\r\n  });\r\n\r\n\r\n\r\n  return(\r\n    <animated.mesh { ...styles}>\r\n    <primitive object={gltf.scene} scale={10} position={[0,5,0]}/>\r\n  </animated.mesh>\r\n  );\r\n}\r\n\r\nconst Umbrella = () => {\r\n  const gltf = useLoader(GLTFLoader, './umbrella/scene.gltf')\r\n  const rota = 3.14*2;\r\n  const styles = useSpring({\r\n    loop: true,\r\n    from: { rotation: [0, rota, 0 ],\r\n             position: [10,28,100],\r\n           },\r\n    to: { rotation: [0, 0, 0],\r\n          position: [10,28,100]\r\n          },\r\n    config:{ mass: 200, tension: 200, friction: 0 }\r\n  });\r\n  // child.material.color.lerp(color.set(hovered === child.name ? \"tomato\" : \"#202020\").convertSRGBToLinear(), hovered ? 0.1 : 0.05)\r\n\r\n  return(\r\n    <animated.mesh { ...styles}>\r\n\r\n        <primitive object={gltf.scene}\r\n         scale={0.1}/>\r\n\r\n    </animated.mesh>\r\n  );\r\n\r\n}\r\n\r\nconst Island = () => {\r\n  var gltf = useLoader(GLTFLoader, './island/island_base1_fin.gltf')\r\n\r\n  const material = new THREE.MeshPhongMaterial({\r\n    color: '#C2B280',    // red (can also use a CSS color string here)\r\n    flatShading: false,\r\n  });\r\n\r\n  return(\r\n    <mesh\r\n    geometry={gltf.nodes.Landscape004.geometry}\r\n    scale={200}\r\n    material={material}\r\n    rotation={[0,3.14,0]}\r\n     >\r\n      </mesh>\r\n  )\r\n}\r\n\r\n\r\nconst Dock = () => {\r\n  var gltf = useLoader(GLTFLoader, './dock/scene.gltf')\r\n  // console.log(gltf)\r\n  const material = new THREE.MeshPhongMaterial({\r\n    color: '#C2B280',    // red (can also use a CSS color string here)\r\n    flatShading: false,\r\n  });\r\n\r\n  return(\r\n    <primitive object={gltf.scene}\r\n     scale={.2}\r\n     position={[-900,-0,-2700]}\r\n     />\r\n  )\r\n}\r\n\r\n\r\n\r\nconst Text0 = props =>{\r\n  const styles = useSpring({\r\n    loop: true,\r\n    from: { rotation: [0, 0, .15 ],\r\n           },\r\n    to: { rotation: [0, 0, -.15],\r\n          },\r\n    config:{ mass: 10, tension: 20, friction: 0 }\r\n  });\r\n  const local_pos = [20,240,43]\r\n  //\r\n  return(\r\n    <mesh>\r\n    <animated.mesh position={[props.position[0] + local_pos[0], props.position[1] + local_pos[1], props.position[2] + local_pos[2] ]} { ...styles}>\r\n     <Text hAlign=\"right\" rotation={[0,3.14/2 ,0]} position={[0,0,0]} children=\"Welcome to dandepaz.net\" />\r\n     <Text hAlign=\"right\" rotation={[0,3.14/2 ,0]} position={[0,-20,0]} children=\"Still Under Construction!\" />\r\n    </animated.mesh>\r\n    </mesh>\r\n  )\r\n}\r\n\r\nconst Text1 = props =>{\r\n  const local_pos = add_2_lists([20,240,43],props.position)\r\n  const styles = useSpring({\r\n    loop: true,\r\n    from: { rotation: [.1, 0, 0 ],\r\n            position:local_pos,\r\n           },\r\n    to: { rotation: [0, 0, 0],\r\n      position:local_pos,\r\n          },\r\n    config:{ mass: 10, tension: 20, friction: 0 }\r\n  });\r\n\r\n  //\r\n  return(\r\n    <mesh>\r\n    <animated.mesh position={local_pos} { ...styles}>\r\n     <Text hAlign=\"right\" rotation={[0,3.14/2 ,0]} position={[0,0,50]} children=\"Click on any gunk covered\" />\r\n     <Text hAlign=\"right\" rotation={[0,3.14/2 ,0]} position={[0,-9,50]} children=\"things to clean them off\" />\r\n     <Text hAlign=\"right\" rotation={[0,3.14/2 ,0]} position={[0,-18,50]} children=\"(black textures for now)\" />\r\n\r\n    </animated.mesh>\r\n    </mesh>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst Billboard = props => {\r\n  var gltf = useLoader(GLTFLoader, './noticeboard/scene.gltf')\r\n  var bill = gltf.scene.clone(true)\r\n  // console.log(gltf)\r\n  const material = new THREE.MeshPhongMaterial({\r\n    color: '#C2B280',    // red (can also use a CSS color string here)\r\n    flatShading: false,\r\n  });\r\n  // const sptLight = useRef()\r\n  // sptLight.current.target.position = [-1000,100,-2800]\r\n  // useHelper(light, SpotLightHelper, \"teal\")\r\n  // <mesh rotation-x={3.14} rotation-y={3.14} rotation-z={3.14} position={[-1000,100,-2750]}>\r\n  // <spotLight castShadow ref={sptLight} intensity={10} angle={20} distance={100} />\r\n  // </mesh>\r\n  return(\r\n    <>\r\n      <primitive object={bill}\r\n       scale={15}\r\n       position={props.position}\r\n       rotation={[0,0,0]}\r\n       />\r\n      {props.children}\r\n    </>\r\n  )\r\n}\r\n\r\nconst Boat_anim = () => {\r\n  const boat_starting = [-900,22,-3000]\r\n  const rota = 3.14*2;\r\n\r\n  const boatstyles = useSpring({\r\n    loop: true,\r\n\r\n    from: { rotation: [.01, 3.14/2, -.01 ],\r\n             position: [-900,22,-3000],\r\n           },\r\n    to: { rotation: [-.01, 3.14/2, -.01],\r\n          position: [-900,24,-3000]\r\n          },\r\n    config:{ mass: 100, tension: 100, friction: 0 }\r\n  });\r\n  const [boat_text, setboattext]= useState(false)\r\n  const textstyles = useSpring({\r\n    scale:1,\r\n    from: {\r\n          position: add_2_lists(boat_starting,[-70,30,0]),\r\n           },\r\n    to: {\r\n          position: add_2_lists(boat_starting,[-70,34,0]),\r\n          },\r\n\r\n    config:{ mass: 100, tension: 100, friction: 0 }\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const [hovered, sethovered] = useState(false)\r\n  const [starter, setsstarter] = useState(false)\r\n  const [colorfrom, setcolorfrom] = useState('#000000')\r\n  const [counter, setcounter] = useState()\r\n  const boat_col_dark = '#452a09'\r\n  const boat_col_light = '#855010'\r\n  const [colorto, setto] = useState('#000000')\r\n\r\n  useEffect(() => {\r\n\r\n    let intervalId;\r\n    let perc = 100;\r\n\r\n    if((hovered)&&(starter)){\r\n      setcounter(perc)\r\n      setto(boat_col_dark)\r\n      setcolorfrom(boat_col_light)\r\n    }\r\n    if (hovered && (starter==false)){\r\n      setsstarter(true)\r\n      setcounter(0)\r\n      setto(boat_col_dark)\r\n      setcolorfrom(boat_col_light)\r\n    }\r\n    if(starter){\r\n      intervalId = setInterval(() => {\r\n        setcounter(counter + 1);\r\n      }, 1)\r\n    }\r\n\r\n\r\n\r\n    if (counter < perc){\r\n      var r = THREE.MathUtils.lerp(parseInt(hextorgb(colorfrom).r),parseInt(hextorgb(colorto).r),counter/perc)\r\n      var g = THREE.MathUtils.lerp(parseInt(hextorgb(colorfrom).g),parseInt(hextorgb(colorto).g),counter/perc)\r\n      var b = THREE.MathUtils.lerp(parseInt(hextorgb(colorfrom).b),parseInt(hextorgb(colorto).b),counter/perc)\r\n      var c = rgbtohex(parseInt(r),parseInt(g),parseInt(b))\r\n      console.log(c)\r\n      setcolorfrom(c)\r\n    }else{\r\n      setsstarter(false)\r\n    }\r\n\r\n   document.body.style.cursor = hovered ? \"pointer\" : \"auto\"\r\n   return () => clearInterval(intervalId);\r\n }, [hovered,counter])\r\n\r\n\r\n\r\n\r\nconst material = new THREE.MeshPhongMaterial({\r\n  color: colorfrom,    // red (can also use a CSS color string here)\r\n  flatShading: true,\r\n\r\n});\r\n  return(\r\n\r\n    <>\r\n\r\n    <animated.mesh {...textstyles}>\r\n    <Text hAlign=\"right\" visible={boat_text} scale={10} rotation={[0,0 ,0]} children=\"Look around the Island for more!\" />\r\n\r\n    </animated.mesh>\r\n\r\n    <animated.mesh {...boatstyles}>\r\n          <mesh\r\n          onClick={(e) => (e.stopPropagation(), setboattext(true),sethovered(true),sethovered(false))}\r\n          onPointerOver={(e) => (e.stopPropagation(), sethovered(true))}\r\n          onPointerOut={(e) => (e.stopPropagation(), sethovered(false))}\r\n          material={material}\r\n           >\r\n\r\n           <Boat material={material} scale={100}/>\r\n            </mesh>\r\n      </animated.mesh>\r\n\r\n\r\n      {Make_spotlight({\r\n        color:0xFF80FF,\r\n        position:add_2_lists(boat_starting,[80,20,0]),\r\n        direction:[0,-1,0],\r\n        angle:15,\r\n        penumbra:.2,\r\n        intensity:50,\r\n        decay:1,\r\n        distance:100\r\n      })}\r\n    </>\r\n  );\r\n\r\n}\r\n\r\n\r\nconst Zeppelin = () => {\r\n  var gltf = useLoader(GLTFLoader, './zeppelin/scene.gltf')\r\n  var textur = useLoader(GLTFLoader, './zeppelin/texture/scene.gltf')\r\n  const zep = gltf.nodes.mesh_0.geometry\r\n  const rota = 3.14*2;\r\n  const styles = useSpring({\r\n    loop: true,\r\n    from: { rotation: [0, 0, 0 ],\r\n             position: [0,40,300],\r\n           },\r\n    to: { rotation: [0, 0, 0],\r\n          position: [0,30,300]\r\n          },\r\n    config:{ mass: 200, tension: 100, friction: 0 }\r\n  });\r\n\r\n  // console.log(gltf)\r\n\r\n  const [hovered, sethovered] = useState(false)\r\n  const [starter, setsstarter] = useState(false)\r\n  const [colorfrom, setcolorfrom] = useState('#000000')\r\n  const [counter, setcounter] = useState()\r\n  const zep_col_dark = '#012a4a'\r\n  const zep_col_light = '#014f86'\r\n  const [colorto, setto] = useState('#000000')\r\n  useEffect(() => {\r\n\r\n    let intervalId;\r\n    let perc = 100;\r\n\r\n    if((hovered)&&(starter)){\r\n      setcounter(perc)\r\n      setto(zep_col_dark)\r\n      setcolorfrom(zep_col_light)\r\n    }\r\n    if (hovered && (starter==false)){\r\n      setsstarter(true)\r\n      setcounter(0)\r\n      setto(zep_col_dark)\r\n      setcolorfrom(zep_col_light)\r\n    }\r\n    if(starter){\r\n      intervalId = setInterval(() => {\r\n        setcounter(counter + 1);\r\n      }, 1)\r\n    }\r\n\r\n\r\n\r\n    if (counter < perc){\r\n      var r = THREE.MathUtils.lerp(parseInt(hextorgb(colorfrom).r),parseInt(hextorgb(colorto).r),counter/perc)\r\n      var g = THREE.MathUtils.lerp(parseInt(hextorgb(colorfrom).g),parseInt(hextorgb(colorto).g),counter/perc)\r\n      var b = THREE.MathUtils.lerp(parseInt(hextorgb(colorfrom).b),parseInt(hextorgb(colorto).b),counter/perc)\r\n      var c = rgbtohex(parseInt(r),parseInt(g),parseInt(b))\r\n      console.log(c)\r\n      setcolorfrom(c)\r\n    }else{\r\n      setsstarter(false)\r\n    }\r\n\r\n   document.body.style.cursor = hovered ? \"pointer\" : \"auto\"\r\n   return () => clearInterval(intervalId);\r\n }, [hovered,counter])\r\n\r\n\r\n\r\n\r\nconst material = new THREE.MeshPhongMaterial({\r\n  color: colorfrom,    // red (can also use a CSS color string here)\r\n  flatShading: true,\r\n\r\n});\r\n  return(\r\n\r\n    <>\r\n    <animated.mesh { ...styles}>\r\n          <mesh geometry={gltf.nodes.mesh_0.geometry}\r\n           scale={10}\r\n           onPointerOver={(e) => (e.stopPropagation(), sethovered(true))\r\n         }\r\n          onPointerOut={(e) => (e.stopPropagation(), sethovered(false))}\r\n          material={material}\r\n           >\r\n\r\n            </mesh>\r\n      </animated.mesh>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\nexport default function Site() {\r\n  document.title = 'Welcome to Dan dePaz.net'\r\n  const Expire = props => {\r\n    const [visible, setVisible] = useState(true);\r\n    useEffect(() => {\r\n      setTimeout(() => {\r\n        setVisible(false);\r\n      }, props.delay);\r\n    }, [props.delay]);\r\n    return visible ? <div>{props.children}</div> : <div />;\r\n  };\r\nconst cam = {\r\n  position: [-900,70,-2830],\r\n  fov: 90,\r\n  near: 1,\r\n  far: 10000,\r\n}\r\nconst targ = [cam.position[0]-10,cam.position[1]-1,cam.position[2]]\r\nconst camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 1, 10000 );\r\n\r\n\r\nconst sign0 = {\r\n  position: [-1020,-140,-2830],\r\n  rotation: [0,0,0]\r\n}\r\n\r\nconst sign1 = {\r\n  position: [-700,-140,-2830],\r\n  rotation: [0,0,0]\r\n}\r\n\r\n\r\n\r\n\r\n// const Text_0 = <Text0 position={sign0}/>\r\n// console.log(Text_0)\r\n\r\n\r\n\r\nreturn(\r\n  <>\r\n\r\n  <Expire delay=\"5000\">the website is loading please wait.</Expire>\r\n  <Expire delay=\"5000\">if you are on mobile it will take a while</Expire>\r\n  <Canvas shadowMap camera={cam}>\r\n\r\n\r\n\r\n\r\n      <Suspense fallback={null}>\r\n\r\n        <directionalLight color={\"orange\"} intensity={.1} position={[0,60,-200]} />\r\n        <pointLight position={[0,60,-200]} color=\"red\" intensity={.5} />\r\n        <pointLight position={[0,60,-200]} color=\"blue\" intensity={.1} />\r\n        <Ocean />\r\n        <Ball/>\r\n        <Umbrella/>\r\n        <Zeppelin/>\r\n        <Island/>\r\n        <Dock/>\r\n        <Boat_anim/>\r\n        <Billboard\r\n        position={sign0.position}\r\n        rotation={sign0.rotation}\r\n        >\r\n        {Make_spotlight({\r\n          color:0xF0F000,\r\n          position:add_2_lists(sign0.position,[20,260,0]),\r\n          direction:[-1,-1,0],\r\n          angle:1,\r\n          penumbra:.2,\r\n          intensity:1,\r\n          distance:100\r\n        })}\r\n          <Text0 position={sign0.position}/>\r\n        </Billboard>\r\n        <Billboard\r\n        position={sign1.position}\r\n        rotation={sign1.rotation}\r\n        >\r\n          {Make_spotlight({\r\n            color:0xF000F0,\r\n            position:add_2_lists(sign1.position,[-20,260,0]),\r\n            direction:[1,-1,0],\r\n            angle:1,\r\n            penumbra:.2,\r\n            intensity:1,\r\n            distance:100\r\n          })}\r\n            <mesh  rotation={[0,3.14,0]} position={add_2_lists(sign1.position,[-20,-10,48])}>\r\n              <Text1 position={[0,0,0]}/>\r\n            </mesh>\r\n        </Billboard>\r\n\r\n\r\n\r\n        <Sky\r\n        intensity={10}\r\n        scale={10000}\r\n        turbidity={10}\r\n        rayleigh={2}\r\n        mieCoefficient={0.005}\r\n        mieDirectionalG={0.8}\r\n        elevation={0}\r\n        azimuth={180}\r\n         ></Sky>\r\n      </Suspense>\r\n\r\n      <OrbitControls target={targ}/>\r\n\r\n  </Canvas>\r\n  </>\r\n);\r\n\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Site from './main.js';\r\n\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Site />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}