{"version":3,"sources":["PortalMaterial.js","text.js","spot_light.js","main.js","index.js"],"names":["PortalMaterial","uniforms","uTime","value","uColorStart","THREE","uColorEnd","vertexShader","fragmentShader","this","v","extend","Text","children","vAlign","hAlign","size","props","color","font","useLoader","FontLoader","config","useMemo","height","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","mesh","useRef","useLayoutEffect","current","geometry","computeBoundingBox","boundingBox","getSize","position","x","y","scale","ref","args","Make_spotlight","direction","angle","intensity","distance","penumbra","decay","look_at","light","object","target","add_2_lists","lista","listb","hextorgb","hex","result","exec","r","parseInt","g","b","componentToHex","c","toString","length","Ocean","gl","useThree","state","waterNormals","wrapS","wrapT","geom","textureWidth","textureHeight","sunDirection","sunColor","waterColor","distortionScale","fog","undefined","format","encoding","useFrame","delta","material","time","Math","PI","TextGeometry","Water","Ball","gltf","GLTFLoader","styles","useSpring","loop","reverse","from","rotation","to","mass","tension","friction","scene","Umbrella","Island","flatShading","nodes","Landscape004","Dock","Text0","local_pos","Text1","Billboard","bill","clone","console","log","Zeppelin","mesh_0","useState","hovered","sethovered","starter","setsstarter","colorfrom","setcolorfrom","counter","setcounter","zep_col_dark","zep_col_light","colorto","setto","useEffect","intervalId","perc","setInterval","lerp","rgbtohex","document","body","style","cursor","clearInterval","onPointerOver","e","stopPropagation","onPointerOut","Site","title","Expire","visible","setVisible","setTimeout","delay","cam","fov","near","far","targ","sign0","window","innerWidth","innerHeight","sign1","shadowMap","camera","fallback","Sky","turbidity","rayleigh","mieCoefficient","mieDirectionalG","elevation","azimuth","OrbitControls","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2d0d3046.chunk.js","sourcesContent":["import * as THREE from 'three'\r\nimport { extend } from '@react-three/fiber'\r\nimport glsl from 'babel-plugin-glsl/macro'\r\n\r\nexport default class PortalMaterial extends THREE.ShaderMaterial {\r\n  constructor() {\r\n    super({\r\n      uniforms: {\r\n        uTime: { value: 0 },\r\n        uColorStart: { value: new THREE.Color('#2B60DE') },\r\n        uColorEnd: { value: new THREE.Color('white') },\r\n      },\r\n      vertexShader: `\r\n      varying vec2 vUv;\r\n      void main() {\r\n        vec4 modelPosition = modelMatrix * vec4(position, 1.0);\r\n        vec4 viewPosition = viewMatrix * modelPosition;\r\n        vec4 projectionPosition = projectionMatrix * viewPosition;\r\n        gl_Position = projectionPosition;\r\n        vUv = uv;\r\n      }\r\n      `,\r\n      fragmentShader: glsl`\r\n      #pragma glslify: cnoise3 = require(glsl-noise/simplex/3d.glsl)\r\n      uniform float uTime;\r\n      uniform vec3 uColorStart;\r\n      uniform vec3 uColorEnd;\r\n      varying vec2 vUv;\r\n      void main() {\r\n        vec2 displacedUv = vUv + cnoise3(vec3(vUv * 1.0, uTime * 0.1));\r\n        float strength = cnoise3(vec3(displacedUv * 1.0, uTime *0.1));\r\n        float outerGlow = distance(vUv, vec2(0.5)) * 3.0 - 1.4;\r\n        strength += outerGlow;\r\n        strength += step(-0.2, strength) * 0.5;\r\n        strength = clamp(strength, 0.0, 0.9);\r\n        vec3 color = mix(uColorStart, uColorEnd, strength);\r\n        gl_FragColor = vec4(color, 1.0);\r\n      }\r\n      `,\r\n    })\r\n  }\r\n\r\n  get time() {\r\n    return this.uniforms.uTime.value\r\n  }\r\n\r\n  set time(v) {\r\n    this.uniforms.uTime.value = v\r\n  }\r\n\r\n  get colorStart() {\r\n    return this.uniforms.uColorStart.value\r\n  }\r\n\r\n  get colorEnd() {\r\n    return this.uniforms.uColorEnd.value\r\n  }\r\n}\r\n\r\nextend({ PortalMaterial })\r\n","import * as THREE from 'three'\r\nimport React, { useMemo, useRef, useLayoutEffect } from 'react'\r\nimport { extend, useLoader } from '@react-three/fiber'\r\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader'\r\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry'\r\n\r\nextend({ TextGeometry })\r\n\r\nexport default function Text({ children, vAlign = 'center', hAlign = 'center', size = 1.5, color = '#000000', ...props }) {\r\n  const font = useLoader(FontLoader, '/gentilis_regular.typeface.json')\r\n  const config = useMemo(\r\n    () => ({ font, size: 40, height: 30, curveSegments: 32, bevelEnabled: true, bevelThickness: 6, bevelSize: 2.5, bevelOffset: 0, bevelSegments: 8 }),\r\n    [font]\r\n  )\r\n  const mesh = useRef()\r\n  useLayoutEffect(() => {\r\n    const size = new THREE.Vector3()\r\n    mesh.current.geometry.computeBoundingBox()\r\n    mesh.current.geometry.boundingBox.getSize(size)\r\n    mesh.current.position.x = hAlign === 'center' ? -size.x / 2 : hAlign === 'right' ? 0 : -size.x\r\n    mesh.current.position.y = vAlign === 'center' ? -size.y / 2 : vAlign === 'top' ? 0 : -size.y\r\n  }, [children])\r\n  return (\r\n    <group {...props} scale={[0.1 * size, 0.1 * size, 0.01]}>\r\n      <mesh ref={mesh}>\r\n        <textGeometry args={[children, config]} />\r\n        <meshNormalMaterial />\r\n      </mesh>\r\n    </group>\r\n  )\r\n}\r\n","import React, { Suspense, useEffect, useRef, useState, useMemo } from 'react'\r\nimport * as THREE from 'three'\r\nimport {SpotLightHelper} from \"three\"\r\n\r\n\r\n\r\n\r\ninterface Test_spotlight_props {\r\n    color?: int;\r\n    position?: list;\r\n    direction?: list;\r\n    angle?: float;\r\n    intensity?: float;\r\n    distance?: float;\r\n    decay?: float;\r\n\r\n}\r\nexport default function Make_spotlight({color=0xFFFFFF,position=[0,0,0],direction=[0,0,0],angle=1,intensity=1,distance=0,penumbra=0,decay=0}:Test_spotlight_props ){\r\n  const look_at = [position[0]+direction[0],position[1]+direction[1],position[2]+direction[2]]\r\n  const light = useMemo(() => new THREE.SpotLight(color), [])\r\n  light.angle = angle\r\n  light.distance = distance\r\n  light.penumbra = penumbra\r\n  light.decay = decay\r\n  return(\r\n    <group>\r\n    <primitive object={light} position={position} />\r\n    <primitive object={light.target} position={look_at}  />\r\n    </group>\r\n  )\r\n}\r\n","import React, { Suspense, useEffect, useRef, useState, useMemo } from 'react'\r\nimport './PortalMaterial'\r\nimport * as THREE from 'three'\r\nimport {SpotLightHelper} from \"three\"\r\nimport { TextureLoader } from 'three/src/loaders/TextureLoader'\r\nimport { Canvas,extend, useLoader, useFrame, useThree,} from '@react-three/fiber'\r\nimport { Physics, Debug, usePlane, useCompoundBody } from '@react-three/cannon'\r\nimport { Geometry,Water } from \"three-stdlib\";\r\nimport { OrbitControls, Sky,useHelper } from '@react-three/drei'\r\n\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\nimport { useSpring, animated,config } from '@react-spring/three'\r\nimport Text from './text'\r\nimport Make_spotlight from './spot_light'\r\nextend({ Water })\r\nfunction add_2_lists(lista,listb){\r\n  return [lista[0]+listb[0],lista[1]+listb[1],lista[2]+listb[2]]\r\n}\r\nfunction hextorgb(hex) {\r\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return result ? {\r\n    r: parseInt(result[1], 16),\r\n    g: parseInt(result[2], 16),\r\n    b: parseInt(result[3], 16)\r\n  } : null;\r\n}\r\nfunction componentToHex(c) {\r\n  var hex = c.toString(16);\r\n  return hex.length == 1 ? \"0\" + hex : hex;\r\n}\r\nfunction rgbtohex(r, g, b) {\r\n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\n\r\n\r\n\r\nfunction Ocean() {\r\n  const ref = useRef()\r\n  const gl = useThree((state) => state.gl)\r\n  const waterNormals = useLoader(THREE.TextureLoader, '/0110.png')\r\n  waterNormals.wrapS = waterNormals.wrapT = THREE.RepeatWrapping\r\n  const geom = useMemo(() => new THREE.PlaneGeometry(20000, 20000), [])\r\n  const config = useMemo(\r\n    () => ({\r\n      textureWidth: 512,\r\n      textureHeight: 512,\r\n      waterNormals,\r\n      sunDirection: new THREE.Vector3(-1),\r\n      sunColor: 'hotpink',\r\n      waterColor: '#012a4a',\r\n      distortionScale: 3,\r\n\r\n      fog: gl.fog !== undefined,\r\n      format: gl.encoding\r\n    }),\r\n    [waterNormals]\r\n  )\r\n  useFrame((state, delta) => (ref.current.material.uniforms.time.value += delta))\r\n  return <water ref={ref} args={[geom, config]} rotation-x={-Math.PI / 2} />\r\n}\r\n\r\n\r\nconst Ball = () => {\r\n  const gltf = useLoader(GLTFLoader, './ball/scene.gltf')\r\n\r\n\r\n  const styles = useSpring({\r\n    loop: {reverse:true},\r\n    from: { rotation: [.01, 0, 0],\r\n             position: [0,0,200],\r\n           },\r\n    to: {\r\n          rotation: [0, 0, 0],\r\n          position: [0,.1,200]\r\n          },\r\n    config:{ mass: 2, tension: 120, friction: 0 }\r\n  });\r\n\r\n\r\n\r\n  return(\r\n    <animated.mesh { ...styles}>\r\n    <primitive object={gltf.scene} scale={10} position={[0,5,0]}/>\r\n  </animated.mesh>\r\n  );\r\n}\r\n\r\nconst Umbrella = () => {\r\n  const gltf = useLoader(GLTFLoader, './umbrella/scene.gltf')\r\n  const rota = 3.14*2;\r\n  const styles = useSpring({\r\n    loop: true,\r\n    from: { rotation: [0, rota, 0 ],\r\n             position: [10,28,100],\r\n           },\r\n    to: { rotation: [0, 0, 0],\r\n          position: [10,28,100]\r\n          },\r\n    config:{ mass: 200, tension: 200, friction: 0 }\r\n  });\r\n  // child.material.color.lerp(color.set(hovered === child.name ? \"tomato\" : \"#202020\").convertSRGBToLinear(), hovered ? 0.1 : 0.05)\r\n\r\n  return(\r\n    <animated.mesh { ...styles}>\r\n\r\n        <primitive object={gltf.scene}\r\n         scale={0.1}/>\r\n\r\n    </animated.mesh>\r\n  );\r\n\r\n}\r\n\r\nconst Island = () => {\r\n  var gltf = useLoader(GLTFLoader, './island/island_base1_fin.gltf')\r\n\r\n  const material = new THREE.MeshPhongMaterial({\r\n    color: '#C2B280',    // red (can also use a CSS color string here)\r\n    flatShading: false,\r\n  });\r\n\r\n  return(\r\n    <mesh\r\n    geometry={gltf.nodes.Landscape004.geometry}\r\n    scale={200}\r\n    material={material}\r\n    rotation={[0,3.14,0]}\r\n     >\r\n      </mesh>\r\n  )\r\n}\r\n\r\n\r\nconst Dock = () => {\r\n  var gltf = useLoader(GLTFLoader, './dock/scene.gltf')\r\n  // console.log(gltf)\r\n  const material = new THREE.MeshPhongMaterial({\r\n    color: '#C2B280',    // red (can also use a CSS color string here)\r\n    flatShading: false,\r\n  });\r\n\r\n  return(\r\n    <primitive object={gltf.scene}\r\n     scale={.2}\r\n     position={[-900,-0,-2700]}\r\n     />\r\n  )\r\n}\r\n\r\n\r\n\r\nconst Text0 = props =>{\r\n  const styles = useSpring({\r\n    loop: true,\r\n    from: { rotation: [0, 0, .15 ],\r\n           },\r\n    to: { rotation: [0, 0, -.15],\r\n          },\r\n    config:{ mass: 10, tension: 20, friction: 0 }\r\n  });\r\n  const local_pos = [20,240,43]\r\n  //\r\n  return(\r\n    <mesh>\r\n    <animated.mesh position={[props.position[0] + local_pos[0], props.position[1] + local_pos[1], props.position[2] + local_pos[2] ]} { ...styles}>\r\n     <Text hAlign=\"right\" rotation={[0,3.14/2 ,0]} position={[0,0,0]} children=\"Welcome to dandepaz.net\" />\r\n     <Text hAlign=\"right\" rotation={[0,3.14/2 ,0]} position={[0,-20,0]} children=\"Still Under Construction!\" />\r\n    </animated.mesh>\r\n    </mesh>\r\n  )\r\n}\r\n\r\nconst Text1 = props =>{\r\n  const local_pos = add_2_lists([20,240,43],props.position)\r\n  const styles = useSpring({\r\n    loop: true,\r\n    from: { rotation: [.1, 0, 0 ],\r\n            position:local_pos,\r\n           },\r\n    to: { rotation: [0, 0, 0],\r\n      position:local_pos,\r\n          },\r\n    config:{ mass: 10, tension: 20, friction: 0 }\r\n  });\r\n\r\n  //\r\n  return(\r\n    <mesh>\r\n    <animated.mesh position={local_pos} { ...styles}>\r\n     <Text hAlign=\"right\" rotation={[0,3.14/2 ,0]} position={[0,0,50]} children=\"Click on any gunk covered\" />\r\n     <Text hAlign=\"right\" rotation={[0,3.14/2 ,0]} position={[0,-9,50]} children=\"things to clean them off\" />\r\n\r\n    </animated.mesh>\r\n    </mesh>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst Billboard = props => {\r\n\r\n\r\n  var gltf = useLoader(GLTFLoader, './noticeboard/scene.gltf')\r\n  var bill = gltf.scene.clone(true)\r\n  console.log(gltf)\r\n  const material = new THREE.MeshPhongMaterial({\r\n    color: '#C2B280',    // red (can also use a CSS color string here)\r\n    flatShading: false,\r\n  });\r\n  // const sptLight = useRef()\r\n  // sptLight.current.target.position = [-1000,100,-2800]\r\n  // useHelper(light, SpotLightHelper, \"teal\")\r\n  // <mesh rotation-x={3.14} rotation-y={3.14} rotation-z={3.14} position={[-1000,100,-2750]}>\r\n  // <spotLight castShadow ref={sptLight} intensity={10} angle={20} distance={100} />\r\n  // </mesh>\r\n\r\n\r\n  return(\r\n    <>\r\n      <primitive object={bill}\r\n       scale={15}\r\n       position={props.position}\r\n       rotation={[0,0,0]}\r\n       />\r\n\r\n\r\n\r\n      {props.children}\r\n\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nconst Zeppelin = () => {\r\n  var gltf = useLoader(GLTFLoader, './zeppelin/scene.gltf')\r\n  var textur = useLoader(GLTFLoader, './zeppelin/texture/scene.gltf')\r\n  const zep = gltf.nodes.mesh_0.geometry\r\n  const rota = 3.14*2;\r\n  const styles = useSpring({\r\n    loop: true,\r\n    from: { rotation: [0, 0, 0 ],\r\n             position: [0,40,300],\r\n           },\r\n    to: { rotation: [0, 0, 0],\r\n          position: [0,30,300]\r\n          },\r\n    config:{ mass: 200, tension: 100, friction: 0 }\r\n  });\r\n\r\n  // console.log(gltf)\r\n\r\n  const [hovered, sethovered] = useState(false)\r\n  const [starter, setsstarter] = useState(false)\r\n  const [colorfrom, setcolorfrom] = useState('#000000')\r\n  const [counter, setcounter] = useState()\r\n  const zep_col_dark = '#012a4a'\r\n  const zep_col_light = '#014f86'\r\n  const [colorto, setto] = useState('#000000')\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    let intervalId;\r\n    let perc = 100;\r\n\r\n    if((hovered)&&(starter)){\r\n      setcounter(perc)\r\n      setto(zep_col_dark)\r\n      setcolorfrom(zep_col_light)\r\n    }\r\n    if (hovered && (starter==false)){\r\n      setsstarter(true)\r\n      setcounter(0)\r\n      setto(zep_col_dark)\r\n      setcolorfrom(zep_col_light)\r\n    }\r\n    if(starter){\r\n      intervalId = setInterval(() => {\r\n        setcounter(counter + 1);\r\n      }, 1)\r\n    }\r\n\r\n\r\n\r\n    if (counter < perc){\r\n      var r = THREE.MathUtils.lerp(parseInt(hextorgb(colorfrom).r),parseInt(hextorgb(colorto).r),counter/perc)\r\n      var g = THREE.MathUtils.lerp(parseInt(hextorgb(colorfrom).g),parseInt(hextorgb(colorto).g),counter/perc)\r\n      var b = THREE.MathUtils.lerp(parseInt(hextorgb(colorfrom).b),parseInt(hextorgb(colorto).b),counter/perc)\r\n      var c = rgbtohex(parseInt(r),parseInt(g),parseInt(b))\r\n      console.log(c)\r\n      setcolorfrom(c)\r\n    }else{\r\n      setsstarter(false)\r\n    }\r\n\r\n   document.body.style.cursor = hovered ? \"pointer\" : \"auto\"\r\n   return () => clearInterval(intervalId);\r\n }, [hovered,counter])\r\n\r\n\r\n\r\n\r\nconst material = new THREE.MeshPhongMaterial({\r\n  color: colorfrom,    // red (can also use a CSS color string here)\r\n  flatShading: true,\r\n\r\n});\r\n  return(\r\n\r\n    <>\r\n    <animated.mesh { ...styles}>\r\n          <mesh geometry={gltf.nodes.mesh_0.geometry}\r\n           scale={10}\r\n           onPointerOver={(e) => (e.stopPropagation(), sethovered(true))\r\n         }\r\n          onPointerOut={(e) => (e.stopPropagation(), sethovered(false))}\r\n          material={material}\r\n           >\r\n\r\n            </mesh>\r\n      </animated.mesh>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\nexport default function Site() {\r\n  document.title = 'Welcome to Dan dePaz.net'\r\n  const Expire = props => {\r\n    const [visible, setVisible] = useState(true);\r\n    useEffect(() => {\r\n      setTimeout(() => {\r\n        setVisible(false);\r\n      }, props.delay);\r\n    }, [props.delay]);\r\n    return visible ? <div>{props.children}</div> : <div />;\r\n  };\r\nconst cam = {\r\n  position: [-900,70,-2830],\r\n  fov: 90,\r\n  near: 1,\r\n  far: 10000,\r\n}\r\nconst targ = [cam.position[0]-10,cam.position[1]-1,cam.position[2]]\r\nconst camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 1, 10000 );\r\n\r\n\r\nconst sign0 = {\r\n  position: [-1020,-140,-2830],\r\n  rotation: [0,0,0]\r\n}\r\n\r\nconst sign1 = {\r\n  position: [-700,-140,-2830],\r\n  rotation: [0,0,0]\r\n}\r\n\r\n\r\n\r\n\r\n// const Text_0 = <Text0 position={sign0}/>\r\n// console.log(Text_0)\r\n\r\n\r\n\r\nreturn(\r\n  <>\r\n\r\n  <Expire delay=\"5000\">the website is loading please wait.</Expire>\r\n  <Expire delay=\"5000\">if you are on mobile it will take a while</Expire>\r\n  <Canvas shadowMap camera={cam}>\r\n\r\n\r\n\r\n\r\n      <Suspense fallback={null}>\r\n\r\n        <directionalLight color={\"orange\"} intensity={.1} position={[0,60,-200]} />\r\n        <pointLight position={[0,60,-200]} color=\"red\" intensity={.5} />\r\n        <pointLight position={[0,60,-200]} color=\"blue\" intensity={.1} />\r\n        <Ocean />\r\n        <Ball/>\r\n        <Umbrella/>\r\n        <Zeppelin/>\r\n        <Island/>\r\n        <Dock/>\r\n        <Billboard\r\n        position={sign0.position}\r\n        rotation={sign0.rotation}\r\n        >\r\n        {Make_spotlight({\r\n          color:0xF0F000,\r\n          position:add_2_lists(sign0.position,[20,260,0]),\r\n          direction:[-1,-1,0],\r\n          angle:1,\r\n          penumbra:.2,\r\n          intensity:1\r\n        })}\r\n          <Text0 position={sign0.position}/>\r\n        </Billboard>\r\n\r\n\r\n\r\n        <Billboard\r\n        position={sign1.position}\r\n        rotation={sign1.rotation}\r\n        >\r\n          {Make_spotlight({\r\n            color:0xF000F0,\r\n            position:add_2_lists(sign1.position,[-20,260,0]),\r\n            direction:[1,-1,0],\r\n            angle:1,\r\n            penumbra:.2,\r\n            intensity:1\r\n          })}\r\n            <mesh  rotation={[0,3.14,0]} position={add_2_lists(sign1.position,[-20,-10,48])}>\r\n              <Text1 position={[0,0,0]}/>\r\n            </mesh>\r\n        </Billboard>\r\n\r\n\r\n\r\n        <Sky\r\n        intensity={10}\r\n        scale={10000}\r\n        turbidity={10}\r\n        rayleigh={2}\r\n        mieCoefficient={0.005}\r\n        mieDirectionalG={0.8}\r\n        elevation={0}\r\n        azimuth={180}\r\n         ></Sky>\r\n      </Suspense>\r\n\r\n      <OrbitControls target={targ}/>\r\n\r\n  </Canvas>\r\n  </>\r\n);\r\n\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Site from './main.js';\r\n\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Site />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}